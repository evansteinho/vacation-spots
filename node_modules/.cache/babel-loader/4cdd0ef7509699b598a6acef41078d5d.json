{"ast":null,"code":"// This service completely hides the data store from the rest of the app.\n// No other part of the app knows how the data is stored. If anyone wants\n// to read or write data, they have to go through this service.\n\n// For this starter code, we use mock data, that is, data in memory that\n// is pretty arbitrary. The service functions to create and fetch articles\n// will just work on this fake data in memory.\n\n// This intent is for you to fork this starter code and then replace the\n// bodies of the service functions with code that fetches from a *real*\n// database like Firebase Firestore.\nimport { db } from \"../firebaseConfig\";\nimport { collection, query, getDocs, addDoc, orderBy, limit, Timestamp, doc } from \"firebase/firestore\";\nexport async function createArticle(_ref) {\n  let {\n    title,\n    body,\n    img\n  } = _ref;\n  // As this is just fake data for messing around, we'll throw in a quick\n  // and unreliable database id. In a real app, the id should b\n  const data = {\n    title,\n    body,\n    date: Timestamp.now(),\n    img\n  };\n  const docRef = addDoc(collection(db, \"spots\"), data);\n  return {\n    id: (await docRef).id,\n    ...data\n  };\n}\nexport async function fetchArticles() {\n  // In storage the ids are separated from the data, but in this function\n  // we are going to combine the id and the data together.\n  const snapshot = await getDocs(query(collection(db, \"articles\"), orderBy(\"date\", \"desc\"), limit(20)));\n  return snapshot.docs.map(docs => ({\n    id: doc.id,\n    ...doc.data()\n  }));\n}","map":{"version":3,"names":["db","collection","query","getDocs","addDoc","orderBy","limit","Timestamp","doc","createArticle","title","body","img","data","date","now","docRef","id","fetchArticles","snapshot","docs","map"],"sources":["/Users/evansteinhoff/Desktop/webapp/vacation-spots-app/src/services/articleService.js"],"sourcesContent":["// This service completely hides the data store from the rest of the app.\n// No other part of the app knows how the data is stored. If anyone wants\n// to read or write data, they have to go through this service.\n\n// For this starter code, we use mock data, that is, data in memory that\n// is pretty arbitrary. The service functions to create and fetch articles\n// will just work on this fake data in memory.\n\n// This intent is for you to fork this starter code and then replace the\n// bodies of the service functions with code that fetches from a *real*\n// database like Firebase Firestore.\nimport { db } from \"../firebaseConfig\"\nimport { collection, query, getDocs, addDoc, orderBy, limit, Timestamp, doc } from \"firebase/firestore\"\n\nexport async function createArticle({ title, body, img}) {\n  // As this is just fake data for messing around, we'll throw in a quick\n  // and unreliable database id. In a real app, the id should b\n  const data = {title, body, date: Timestamp.now(), img}\n  const docRef = addDoc(collection(db, \"spots\"), data)\n  return { id: (await docRef).id, ...data};\n\n}\n\nexport async function fetchArticles() {\n  // In storage the ids are separated from the data, but in this function\n  // we are going to combine the id and the data together.\n  const snapshot = await getDocs(\n    query(collection(db, \"articles\"), orderBy(\"date\", \"desc\"), limit(20))\n  )\n  return snapshot.docs.map((docs) => ({\n    id: doc.id,\n    ...doc.data(),\n  }));\n}\n"],"mappings":"AAAA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,SAASA,EAAE,QAAQ,mBAAmB;AACtC,SAASC,UAAU,EAAEC,KAAK,EAAEC,OAAO,EAAEC,MAAM,EAAEC,OAAO,EAAEC,KAAK,EAAEC,SAAS,EAAEC,GAAG,QAAQ,oBAAoB;AAEvG,OAAO,eAAeC,aAAa,OAAsB;EAAA,IAArB;IAAEC,KAAK;IAAEC,IAAI;IAAEC;EAAG,CAAC;EACrD;EACA;EACA,MAAMC,IAAI,GAAG;IAACH,KAAK;IAAEC,IAAI;IAAEG,IAAI,EAAEP,SAAS,CAACQ,GAAG,EAAE;IAAEH;EAAG,CAAC;EACtD,MAAMI,MAAM,GAAGZ,MAAM,CAACH,UAAU,CAACD,EAAE,EAAE,OAAO,CAAC,EAAEa,IAAI,CAAC;EACpD,OAAO;IAAEI,EAAE,EAAE,CAAC,MAAMD,MAAM,EAAEC,EAAE;IAAE,GAAGJ;EAAI,CAAC;AAE1C;AAEA,OAAO,eAAeK,aAAa,GAAG;EACpC;EACA;EACA,MAAMC,QAAQ,GAAG,MAAMhB,OAAO,CAC5BD,KAAK,CAACD,UAAU,CAACD,EAAE,EAAE,UAAU,CAAC,EAAEK,OAAO,CAAC,MAAM,EAAE,MAAM,CAAC,EAAEC,KAAK,CAAC,EAAE,CAAC,CAAC,CACtE;EACD,OAAOa,QAAQ,CAACC,IAAI,CAACC,GAAG,CAAED,IAAI,KAAM;IAClCH,EAAE,EAAET,GAAG,CAACS,EAAE;IACV,GAAGT,GAAG,CAACK,IAAI;EACb,CAAC,CAAC,CAAC;AACL"},"metadata":{},"sourceType":"module"}