{"ast":null,"code":"var _jsxFileName = \"/Users/evansteinhoff/Desktop/webapp/blog-starter-app/src/components/App.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport Nav from \"./Nav\";\nimport Article from \"./Article\";\nimport ArticleEntry from \"./ArticleEntry\";\nimport { fetchArticles, createArticle } from \"../services/articleService\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  _s();\n  const [articles, setArticles] = useState([]);\n  const [article, setArticle] = useState(null);\n  const [writing, setWriting] = useState(null);\n\n  // This is a trivial app, so just fetch all the articles once, when\n  // the app is loaded. A real app would do pagination. Note that\n  // \"fetchArticles\" is what gets the articles from the service and\n  // then \"setArticles\" writes them into the React state.\n  useEffect(() => {\n    fetchArticles().then(setArticles);\n  }, []);\n\n  // Update the \"database\" *then* update the internal React state. These\n  // two steps are definitely necessary.\n  function addArticle(_ref) {\n    let {\n      title,\n      body\n    } = _ref;\n    createArticle({\n      title,\n      body\n    }).then(article => {\n      setArticle(article);\n      setArticles([article, ...articles]);\n      setWriting(false);\n    });\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      children: [\"Blog \", /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setWriting(true),\n        children: \"New Article\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 14\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Nav, {\n      articles: articles,\n      setArticle: setArticle\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), writing ? /*#__PURE__*/_jsxDEV(ArticleEntry, {\n      addArticle: addArticle\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(Article, {\n      article: article\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"aSzHZFMs8iKSh0HlrSgER57oMzE=\");\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useEffect","useState","Nav","Article","ArticleEntry","fetchArticles","createArticle","App","articles","setArticles","article","setArticle","writing","setWriting","then","addArticle","title","body"],"sources":["/Users/evansteinhoff/Desktop/webapp/blog-starter-app/src/components/App.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\nimport Nav from \"./Nav\";\nimport Article from \"./Article\";\nimport ArticleEntry from \"./ArticleEntry\";\nimport { fetchArticles, createArticle } from \"../services/articleService\";\nimport \"./App.css\";\n\nexport default function App() {\n  const [articles, setArticles] = useState([]);\n  const [article, setArticle] = useState(null);\n  const [writing, setWriting] = useState(null);\n\n  // This is a trivial app, so just fetch all the articles once, when\n  // the app is loaded. A real app would do pagination. Note that\n  // \"fetchArticles\" is what gets the articles from the service and\n  // then \"setArticles\" writes them into the React state.\n  useEffect(() => {\n    fetchArticles().then(setArticles);\n  }, []);\n\n  // Update the \"database\" *then* update the internal React state. These\n  // two steps are definitely necessary.\n  function addArticle({ title, body }) {\n    createArticle({ title, body }).then((article) => {\n      setArticle(article);\n      setArticles([article, ...articles]);\n      setWriting(false);\n    });\n  }\n\n  return (\n    <div className=\"App\">\n      <header>\n        Blog <button onClick={() => setWriting(true)}>New Article</button>\n      </header>\n      <Nav articles={articles} setArticle={setArticle} />\n      {writing ? (\n        <ArticleEntry addArticle={addArticle} />\n      ) : (\n        <Article article={article} />\n      )}\n    </div>\n  );\n}\n"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,OAAOC,GAAG,MAAM,OAAO;AACvB,OAAOC,OAAO,MAAM,WAAW;AAC/B,OAAOC,YAAY,MAAM,gBAAgB;AACzC,SAASC,aAAa,EAAEC,aAAa,QAAQ,4BAA4B;AACzE,OAAO,WAAW;AAAC;AAEnB,eAAe,SAASC,GAAG,GAAG;EAAA;EAC5B,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACS,OAAO,EAAEC,UAAU,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACW,OAAO,EAAEC,UAAU,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC;;EAE5C;EACA;EACA;EACA;EACAD,SAAS,CAAC,MAAM;IACdK,aAAa,EAAE,CAACS,IAAI,CAACL,WAAW,CAAC;EACnC,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA;EACA,SAASM,UAAU,OAAkB;IAAA,IAAjB;MAAEC,KAAK;MAAEC;IAAK,CAAC;IACjCX,aAAa,CAAC;MAAEU,KAAK;MAAEC;IAAK,CAAC,CAAC,CAACH,IAAI,CAAEJ,OAAO,IAAK;MAC/CC,UAAU,CAACD,OAAO,CAAC;MACnBD,WAAW,CAAC,CAACC,OAAO,EAAE,GAAGF,QAAQ,CAAC,CAAC;MACnCK,UAAU,CAAC,KAAK,CAAC;IACnB,CAAC,CAAC;EACJ;EAEA,oBACE;IAAK,SAAS,EAAC,KAAK;IAAA,wBAClB;MAAA,iCACO;QAAQ,OAAO,EAAE,MAAMA,UAAU,CAAC,IAAI,CAAE;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAAqB;IAAA;MAAA;MAAA;MAAA;IAAA,QAC3D,eACT,QAAC,GAAG;MAAC,QAAQ,EAAEL,QAAS;MAAC,UAAU,EAAEG;IAAW;MAAA;MAAA;MAAA;IAAA,QAAG,EAClDC,OAAO,gBACN,QAAC,YAAY;MAAC,UAAU,EAAEG;IAAW;MAAA;MAAA;MAAA;IAAA,QAAG,gBAExC,QAAC,OAAO;MAAC,OAAO,EAAEL;IAAQ;MAAA;MAAA;MAAA;IAAA,QAC3B;EAAA;IAAA;IAAA;IAAA;EAAA,QACG;AAEV;AAAC,GApCuBH,GAAG;AAAA,KAAHA,GAAG;AAAA;AAAA"},"metadata":{},"sourceType":"module"}